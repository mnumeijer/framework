@using Signum.Entities.Basics
@using (var e = Html.TypeContext<ExceptionEntity>())
{
    e.LabelColumns = new BsColumn(4);
    <div class="ro2">
        <div class="col-sm-6">
            @Html.ValueLine(e, f => f.Environment)
            @Html.ValueLine(e, f => f.CreationDate)<text>(</text>@e.Value.CreationDate.ToUserInterface().ToAgoString()<text>)</text>
            @Html.EntityLine(e, f => f.User)
            @Html.ValueLine(e, f => f.Version)
            @Html.ValueLine(e, f => f.ThreadId)
            @Html.ValueLine(e, f => f.MachineName)
            @Html.ValueLine(e, f => f.ApplicationName)
        </div>
        <div class="col-sm-6">
            @Html.ValueLine(e, f => f.ActionName)
            @Html.ValueLine(e, f => f.ControllerName)
            @Html.ValueLine(e, f => f.UserHostAddress)
            @Html.ValueLine(e, f => f.UserHostName)
            @Html.ValueLine(e, f => f.UserAgent)
        </div>
    </div>
    e.LabelColumns = new BsColumn(2);
    @Html.ValueLine(e, f => f.RequestUrl)
    @Html.ValueLine(e, f => f.UrlReferer)
    
    <h3>QueryString</h3>
    <pre><code>@e.Value.QueryString</code></pre>
    
    <h3>Form</h3>
    <pre><code>@e.Value.Form</code></pre>

    <h3>Session</h3>
    <pre><code>@e.Value.Session</code></pre>

    <h3 style="color: rgb(139,0,0)">@e.Value.ExceptionType</h3>
    <pre><code>@e.Value.ExceptionMessage</code></pre>
    <h3>StackTrace</h3>
    <pre><code>@e.Value.StackTrace</code></pre>
    <h3>Data</h3>
    <pre><code>@e.Value.Data</code></pre>
}